package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"github.com/freeeve/gophergala/models"
)

/*FindLearningResourcesOK learning-resources response

swagger:response findLearningResourcesOK
*/
type FindLearningResourcesOK struct {

	// In: body
	Payload []*models.LearningResource `json:"body,omitempty"`
}

// NewFindLearningResourcesOK creates FindLearningResourcesOK with default headers values
func NewFindLearningResourcesOK() *FindLearningResourcesOK {
	return &FindLearningResourcesOK{}
}

// WithPayload adds the payload to the find learning resources o k response
func (o *FindLearningResourcesOK) WithPayload(payload []*models.LearningResource) *FindLearningResourcesOK {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *FindLearningResourcesOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*FindLearningResourcesDefault unexpected error

swagger:response findLearningResourcesDefault
*/
type FindLearningResourcesDefault struct {
	_statusCode int

	// In: body
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewFindLearningResourcesDefault creates FindLearningResourcesDefault with default headers values
func NewFindLearningResourcesDefault(code int) *FindLearningResourcesDefault {
	if code <= 0 {
		code = 500
	}

	return &FindLearningResourcesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the find learning resources default response
func (o *FindLearningResourcesDefault) WithStatusCode(code int) *FindLearningResourcesDefault {
	o._statusCode = code
	return o
}

// WithPayload adds the payload to the find learning resources default response
func (o *FindLearningResourcesDefault) WithPayload(payload *models.ErrorModel) *FindLearningResourcesDefault {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *FindLearningResourcesDefault) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
