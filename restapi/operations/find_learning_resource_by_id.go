package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit/middleware"
)

// FindLearningResourceByIDHandlerFunc turns a function with the right signature into a find learning resource by id handler
type FindLearningResourceByIDHandlerFunc func(FindLearningResourceByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn FindLearningResourceByIDHandlerFunc) Handle(params FindLearningResourceByIDParams) middleware.Responder {
	return fn(params)
}

// FindLearningResourceByIDHandler interface for that can handle valid find learning resource by id params
type FindLearningResourceByIDHandler interface {
	Handle(FindLearningResourceByIDParams) middleware.Responder
}

// NewFindLearningResourceByID creates a new http.Handler for the find learning resource by id operation
func NewFindLearningResourceByID(ctx *middleware.Context, handler FindLearningResourceByIDHandler) *FindLearningResourceByID {
	return &FindLearningResourceByID{Context: ctx, Handler: handler}
}

/*FindLearningResourceByID swagger:route GET /learning-resources/{id} findLearningResourceById

Returns a learning resource based on a single ID, if the user has access to the learning resource

*/
type FindLearningResourceByID struct {
	Context *middleware.Context
	Params  FindLearningResourceByIDParams
	Handler FindLearningResourceByIDHandler
}

func (o *FindLearningResourceByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	o.Params = NewFindLearningResourceByIDParams()

	if err := o.Context.BindValidRequest(r, route, &o.Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(o.Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
