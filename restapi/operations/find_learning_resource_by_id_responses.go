package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"github.com/freeeve/gophergala/models"
)

/*FindLearningResourceByIDOK learning resource response

swagger:response findLearningResourceByIdOK
*/
type FindLearningResourceByIDOK struct {

	// In: body
	Payload *models.LearningResource `json:"body,omitempty"`
}

// NewFindLearningResourceByIDOK creates FindLearningResourceByIDOK with default headers values
func NewFindLearningResourceByIDOK() *FindLearningResourceByIDOK {
	return &FindLearningResourceByIDOK{}
}

// WithPayload adds the payload to the find learning resource by id o k response
func (o *FindLearningResourceByIDOK) WithPayload(payload *models.LearningResource) *FindLearningResourceByIDOK {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *FindLearningResourceByIDOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*FindLearningResourceByIDDefault unexpected error

swagger:response findLearningResourceByIdDefault
*/
type FindLearningResourceByIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewFindLearningResourceByIDDefault creates FindLearningResourceByIDDefault with default headers values
func NewFindLearningResourceByIDDefault(code int) *FindLearningResourceByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &FindLearningResourceByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the find learning resource by id default response
func (o *FindLearningResourceByIDDefault) WithStatusCode(code int) *FindLearningResourceByIDDefault {
	o._statusCode = code
	return o
}

// WithPayload adds the payload to the find learning resource by id default response
func (o *FindLearningResourceByIDDefault) WithPayload(payload *models.ErrorModel) *FindLearningResourceByIDDefault {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *FindLearningResourceByIDDefault) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
