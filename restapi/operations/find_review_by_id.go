package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit/middleware"
)

// FindReviewByIDHandlerFunc turns a function with the right signature into a find review by id handler
type FindReviewByIDHandlerFunc func(FindReviewByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn FindReviewByIDHandlerFunc) Handle(params FindReviewByIDParams) middleware.Responder {
	return fn(params)
}

// FindReviewByIDHandler interface for that can handle valid find review by id params
type FindReviewByIDHandler interface {
	Handle(FindReviewByIDParams) middleware.Responder
}

// NewFindReviewByID creates a new http.Handler for the find review by id operation
func NewFindReviewByID(ctx *middleware.Context, handler FindReviewByIDHandler) *FindReviewByID {
	return &FindReviewByID{Context: ctx, Handler: handler}
}

/*FindReviewByID swagger:route GET /reviews/{id} findReviewById

Returns a review based on a single ID, if the user has access to the review

*/
type FindReviewByID struct {
	Context *middleware.Context
	Params  FindReviewByIDParams
	Handler FindReviewByIDHandler
}

func (o *FindReviewByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	o.Params = NewFindReviewByIDParams()

	if err := o.Context.BindValidRequest(r, route, &o.Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(o.Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
