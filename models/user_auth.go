package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
	"github.com/go-swagger/go-swagger/strfmt"
)

/*UserAuth UserAuth user auth

swagger:model UserAuth
*/
type UserAuth struct {

	/* Email email

	Required: true
	*/
	Email string `json:"email,omitempty"`

	/* Password password

	Required: true
	*/
	Password string `json:"password,omitempty"`
}

// Validate validates this user auth
func (m *UserAuth) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEmail(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePassword(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserAuth) validateEmail(formats strfmt.Registry) error {

	if err := validate.RequiredString("email", "body", string(m.Email)); err != nil {
		return err
	}

	return nil
}

func (m *UserAuth) validatePassword(formats strfmt.Registry) error {

	if err := validate.RequiredString("password", "body", string(m.Password)); err != nil {
		return err
	}

	return nil
}
