{
  "name": "feathers-memory",
  "description": "Feathers in memory service",
  "version": "0.3.4",
  "homepage": "https://feathersjs.com",
  "repository": {
    "type": "git",
    "url": "git://github.com/feathersjs/feathers-memory.git"
  },
  "keywords": [
    "services",
    "feathers",
    "memory"
  ],
  "author": {
    "name": "Feathers",
    "email": "hello@feathersjs.com",
    "url": "http://feathersjs.com"
  },
  "contributors": [
    {
      "name": "Eric Kryski",
      "email": "e.kryski@gmail.com",
      "url": "http://erickryski.com"
    },
    {
      "name": "David Luecke",
      "email": "daff@neyeon.de",
      "url": "http://neyeon.com"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/feathersjs/feathers-memory/issues"
  },
  "main": "lib/memory",
  "scripts": {
    "test": "grunt test",
    "start": "grunt"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "dependencies": {
    "feathers-errors": "^0.2.1",
    "lodash": "~2.4.1",
    "uberproto": "~1.1.0"
  },
  "devDependencies": {
    "body-parser": "^1.4.3",
    "chai": "^1.9.1",
    "feathers": "^1.0.0-pre.5",
    "grunt": "~0.4.1",
    "grunt-cli": "~0.1.7",
    "grunt-contrib-jshint": "~0.x",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-release": "~0.5.1",
    "grunt-simple-mocha": "~0.4.0",
    "socket.io-client": "^0.9.16",
    "supertest": "~0.9.0"
  },
  "readme": "# feathers-memory [![Build Status](https://travis-ci.org/feathersjs/feathers-memory.svg?branch=master)](https://travis-ci.org/feathersjs/feathers-memory)[![Code Climate](https://codeclimate.com/github/feathersjs/feathers-memory.png)](https://codeclimate.com/github/feathersjs/feathers-memory)\n\n> An in memory CRUD service for [feathers](http://feathersjs.com)\n\n## Getting Started\n\nInstall the module with: `npm install feathers-memory --save`\n\n```js\nvar feathers = require('feathers');\nvar memory = require('feathers-memory')();\n\napp.configure(feathers.rest()).use('/users', memory);\n```\n\n## Documentation\n\n#### API\n\nThe feathers-memory service follows the same convention as all the other services. Therefore, it provides the following methods:\n\n`find`, `get`, `create`, `update`, `patch`, `remove` and `setup`.\n\n```js\nvar memoryService = {\n  find: function(params, callback) {},\n  get: function(id, params, callback) {},\n  create: function(data, params, callback) {},\n  update: function(id, data, params, callback) {},\n  patch: function(id, data, params, callback) {},\n  remove: function(id, params, callback) {},\n  setup: function(app) {}\n}\n```\n\n#### Usage:\n\n```js\nvar feathers = require('feathers');\nvar memory = require('feathers-memory')();\nvar app = feathers();\n\napp.configure(feathers.rest())\n   .use('/users', memory)\n   .listen(8080);\n```\n\n#### Extending:\n\nYou can also extend any of the feathers services to do something custom.\n\n```js\nvar feathers = require('feathers');\nvar memory = require('feathers-memory')();\nvar app = feathers();\n\nvar myUserService = memory.extend({\n  find: function(params, cb){\n    // Do something awesome!\n    \n    console.log('I am extending the find method');\n    \n    this._super.apply(this, arguments);\n  }\n});\n\napp.configure(feathers.rest())\n   .use('/users', myUserService)\n   .listen(8080);\n```\n\n#### Advanced Querying\n\nYou are probably also going to want to filter your data. You can do that by passing options via the body or in a query string. Like so:\n\n```\nGET /users?name=eric&limit=10&skip=10\n```\n\n__Sort:__\n\n```\nGET /users?sort[]=name&sort[]=age\n```\n\n__Order:__\n\n```\nGET /users?order=ascending\n```\n\n__Skip:__\n\n```\nGET /users?skip=10\n```\n\n__Limit:__\n\n```\nGET /users?limit=10\n```\n\n## Examples\nSee [examples directory](https://github.com/feathersjs/feathers-memory/tree/master/examples).\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n__0.3.0__\n\n- Fixing how the module is exported.\n- Adding `PATCH` support back in\n\n__0.2.2__\n\n- Minor bug fixes\n\n__0.2.1__\n\n- Now utilizing [feathers-errors](https://github.com/feathersjs/feathers-errors)\n- Proper documentation\n\n__0.2.0__\n\n- Unknown\n\n__0.1.2__\n\n- Unknown\n\n__0.1.1__\n\n- Unknown\n\n__0.1.0__\n\n- Initial release\n\n## License\nCopyright (c) 2014 [Eric Kryski](https://github.com/ekryski)\nLicensed under the [MIT license](https://github.com/feathersjs/feathers-memory/blob/master/LICENSE-MIT).\n",
  "readmeFilename": "README.md",
  "_id": "feathers-memory@0.3.4",
  "_shasum": "8760eb6e5997e85d261d769b8fe0ae197b902cfc",
  "_resolved": "https://registry.npmjs.org/feathers-memory/-/feathers-memory-0.3.4.tgz",
  "_from": "feathers-memory@>=0.3.4 <0.4.0"
}
